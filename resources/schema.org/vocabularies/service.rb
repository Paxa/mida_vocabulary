require 'mida_vocabulary/vocabulary'

module Mida
  module SchemaOrg

    autoload :Thing, 'mida_vocabulary/vocabularies/schemaorg/thing'
    autoload :ServiceChannel, 'mida_vocabulary/vocabularies/schemaorg/servicechannel'
    autoload :Organization, 'mida_vocabulary/vocabularies/schemaorg/organization'
    autoload :Person, 'mida_vocabulary/vocabularies/schemaorg/person'
    autoload :AdministrativeArea, 'mida_vocabulary/vocabularies/schemaorg/administrativearea'
    autoload :Audience, 'mida_vocabulary/vocabularies/schemaorg/audience'

    # A service provided by an organization, e.g. delivery service, print services, etc.
    class Service < Mida::Vocabulary
      itemtype %r{http://schema.org/Service}i
      include_vocabulary Mida::SchemaOrg::Thing

      # A means of accessing the service (e.g. a phone bank, a web site, a location, etc.)
      has_many 'availableChannel' do
        extract Mida::SchemaOrg::ServiceChannel
        extract Mida::DataType::Text
      end

      # The tangible thing generated by the service, e.g. a passport, permit, etc.
      has_many 'produces' do
        extract Mida::SchemaOrg::Thing
        extract Mida::DataType::Text
      end

      # The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supercedes carrier.
      has_many 'provider' do
        extract Mida::SchemaOrg::Organization
        extract Mida::SchemaOrg::Person
        extract Mida::DataType::Text
      end

      # The geographic area where the service is provided.
      has_many 'serviceArea' do
        extract Mida::SchemaOrg::AdministrativeArea
        extract Mida::DataType::Text
      end

      # The audience eligible for this service.
      has_many 'serviceAudience' do
        extract Mida::SchemaOrg::Audience
        extract Mida::DataType::Text
      end

      # The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
      has_many 'serviceType'
    end

  end
end
